<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAsKCgofKCgoOTw8
        PFBERERcQ0NDXTk5OVQjIyNBCAgIKQAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhERERVLS0tGdHR0g4yM
        jLSamprToaGh46SkpOmkpKTqoaGh45mZmdWJiYm4bGxsjD4+PlUKCgokAAAACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbABISEgxeXl5KjY2NpaWl
        peSvr6/8srKy/7Kysv+ysrL/srKy/7Kysv+ysrL/srKy/7Kysv+vr6/8o6Oj5oODg7BFRUVfAwMDHQAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTAP///wBhYWEhe3t7iI2N
        jeSXl5f/mJiY/5iYmP+YmJj/mJiY/5iYmP+YmJj/mJiY/5iYmP+YmJj/mJiY/5iYmP+ampr/paWl/q+v
        r+ePj4+aOjo6OQAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcnJwD///8AVlZWMVhY
        WLhLS0v7PT09/zk5Of85OTn/OTk5/zk5Of85OTn/OTk5/zk5Of85OTn/OTk5/zk5Of85OTn/OTk5/zo6
        Ov9GRkb/enp6/9TU1PzPz8/FW1tbTAAAAAgDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgYAuLi4AHZ2
        di1NTU3DNDQ0/zQ0NP9ERET/SEhI/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dH
        R/9HR0f/RkZG/zk5Of8uLi7/XFxc/9/f3//Y2NjPXl5eSgAAAAUBAQEAAAAAAAAAAAAAAAAAAAAAALS0
        tACoqKgaiYmJszk5Of9BQUH/p6en/9/f3//i4uL/4uLi/+Li4v/i4uL/4uLi/+Li4v/i4uL/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/h4eH/v7+//1VVVf8uLi7/jIyM//39/f/Pz8/DPz8/MwAAAAEAAAAAAAAAAAAA
        AAB1dXUAJCQkBdzc3ISJiYn8LS0t/4SEhP/9/f3/////////////////////////////////////////
        ////////////////////////////////////////sLCw/zIyMv9cXFz/8vLy//f39/yRkZGUAAAAFSIi
        IgAAAAAAERERAPX19QDFxcU89PT05oCAgP8tLS3/n5+f////////////////////////////////////
        ///////////////////////////////////////////////////MzMz/OTk5/1BQUP/r6+v//Pz8/7S0
        tOVOTk5TAAAAAwAAAACWlpYAZ2dnBufn5539/f3/fn5+/y0tLf+goKD/////////////////////////
        /////////////////////////////////////////////////////////////83Nzf85OTn/UFBQ/+vr
        6//7+/v/v7+//4eHh6cFBQUWJycnAODg4ADT09Mu+Pj44/////9+fn7/LS0t/6CgoP//////////////
        ////////////////////////////////////////////////////////////////////////zc3N/zk5
        Of9QUFD/6+vr//v7+//AwMD/oqKi5E9PT0L///8AqqqqAHp6em2MjIz+jo6O/1VVVf8wMDD/ZWVl/5CQ
        kP+NjY3/kJCQ/4+Pj/+NjY3/j4+P/5CQkP+QkJD/jo6O/42Njf+Ojo7/jY2N/46Ojv+Wlpb/3Nzc////
        ///Nzc3/OTk5/1BQUP/r6+v/+/v7/8DAwP+srKz8e3t7ewAAAAZeXl4GRUVFpX19ff91dXX/MzMz/zMz
        M/8wMDD/W1tb/4mJif88PDz/S0tL/5GRkf9fX1//Li4u/y8vL/9LS0v/h4eH/52dnf+IiIj/TExM/yws
        LP+JiYn//////83Nzf85OTn/UFBQ/+vr6//7+/v/v7+//6+vr/+Tk5OtBwcHE05OThZISEjL09PT/8TE
        xP8zMzP/MjIy/zAwMP+Ojo7/7e3t/1NTU/+mpqb//////5eXl/8uLi7/UlJS/9bW1v/4+Pj/6Ojo//7+
        /v+Wlpb/LS0t/39/f///////zc3N/zk5Of9QUFD/6+vr//v7+/+/v7//sLCw/5+fn808PDwmTExMKEVF
        Rd7S0tL/2dnZ/21tbf9FRUX/Ly8v/46Ojv/r6+v/eHh4/+jo6P//////l5eX/y4uLv+ZmZn/+/v7/4uL
        i/90dHT/8/Pz/5qamv8tLS3/gICA///////Nzc3/OTk5/1BQUP/r6+v/+/v7/7+/v/+wsLD/paWl3llZ
        WTZKSkoxRERE5tDQ0P/9/f3/9fX1/87Ozv9LS0v/jIyM/+3t7f/CwsL/9vb2//z8/P+Xl5f/MjIy/7u7
        u//n5+f/VlZW/8rKyv//////mZmZ/y0tLf+AgID//////83Nzf85OTn/UFBQ/+vr6//7+/v/v7+//6+v
        r/+oqKjlZ2dnPUtLSzFERETm09PT/87Ozv+Ojo7/+vr6/4KCgv+JiYn//f39//n5+f+/v7//6enp/5iY
        mP8wMDD/ra2t//Dw8P9eXl7/c3Nz/4eHh/9bW1v/Li4u/4CAgP//////zc3N/zk5Of9QUFD/6+vr//v7
        +/+/v7//r6+v/6ioqORsbGw6T09PJkZGRt3S0tL/2NjY/6Ojo//6+vr/fn5+/4mJif//////6Ojo/3Nz
        c//o6Oj/mZmZ/y0tLf9xcXH/9fX1/8vLy/+Kior/kpKS/0pKSv8uLi7/gICA///////Nzc3/OTk5/1BQ
        UP/r6+v/+/v7/7+/v/+vr6//p6en22pqai1WVlYVRkZGybu7u//u7u7/6+vr/7q6uv9ERET/gYGB/+3t
        7f+enp7/SkpK/9bW1v+NjY3/Ly8v/zY2Nv+IiIj/3d3d//Dw8P/i4uL/YGBg/ywsLP9/f3///////83N
        zf85OTn/UFBQ/+vr6//7+/v/v7+//6+vr/+lpaXGWlpaGX9/fwRMTEyiVVVV/2NjY/9XV1f/Ozs7/zk5
        Of9OTk7/YGBg/0xMTP9ERET/XFxc/1BQUP9BQUH/QUFB/0FBQf9UVFT/ZWVl/1tbW/9FRUX/Q0ND/6io
        qP//////zc3N/zk5Of9QUFD/6+vr//v7+/+/v7//r6+v/6CgoJ4TExMH4uLiAMbGxmfX19f92NjY/3Nz
        c/8uLi7/jIyM/9zc3P/Y2Nj/2dnZ/9ra2v/Y2Nj/2dnZ/9ra2v/a2tr/2tra/9nZ2f/Y2Nj/2NjY/9nZ
        2f/e3t7/+Pj4///////Nzc3/OTk5/1BQUP/r6+v/+/v7/7+/v/+tra37mJiYZP///wDw8PAA7+/vKfz8
        /OD/////hISE/y0tLf+goKD/////////////////////////////////////////////////////////
        /////////////////////////////83Nzf85OTn/UFBQ/+vr6//7+/v/wMDA/6qqqtqJiYknnZ2dAN3d
        3QC+vr4D9fX1lf////+EhIT/LS0t/6CgoP//////////////////////////////////////////////
        ////////////////////////////////////////urq6/zU1Nf9QUFD/6urq//v7+/+/v7//oqKiiycn
        JwNoaGgAxMTEAPHx8QDs7Owy+/v74YWFhf8tLS3/oKCg////////////////////////////////////
        ///////////////////Pz8//hYWF/4CAgP+AgID/gICA/3h4eP9OTk7/MDAw/1VVVf/u7u7/+/v7/76+
        vtmTk5MsqKioABUVFQAAAAAA29vbAJOTkwH09PR2f39/+i4uLv+goKD/////////////////////////
        /////////////////////////v7+/319ff8sLCz/MDAw/zAwMP8wMDD/MDAw/zExMf8xMTH/i4uL//7+
        /v/5+fn5x8fHbAAAAAB8fHwAAAAAAAAAAAAAAAAA4+PjAPv7+xBgYGCkMjIy/5+fn///////////////
        ///////////////////////////////////9/f3/d3d3/y8vL/8zMzP/MzMz/zMzM/8zMzP/MDAw/2dn
        Z//o6Oj///////Ly8qbMzMwQ2NjYAAAAAAAAAAAAAAAAAAAAAACTk5MATExMAFdXVx49PT2zoaGh////
        //////////////////////////////////////////////39/f93d3f/Ly8v/zMzM/8zMzP/MzMz/zEx
        Mf9fX1//3d3d///////09PS13t7eH+zs7AB4eHgAAAAAAAAAAAAAAAAAAAAAAAAAAACcnJwAREREAERE
        RB7BwcGk/v7++v///////////////////////////////////////////f39/3d3d/8vLy//MzMz/zMz
        M/8xMTH/YGBg/93d3f/+/v769PT0peHh4R/19fUAoaGhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACioqIA7u7uAOPj4xDz8/N2+vr64v7+/v/////////////////////////////////7+/v/cXFx/zAw
        MP8zMzP/MTEx/2BgYP/d3d3//f394vHx8Xfe3t4Q6urqAKqqqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA29vbAM7OzgLs7Owy9PT0lenp6eDX19f90tLS/9LS0v/S0tL/1NTU/8HB
        wf9OTk7/MTEx/zMzM/9dXV3909PT4fn5+ZXq6uoyyMjIAtjY2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOzswC8vLwEi4uLKGRkZGdTU1OhS0tLyEdH
        R91GRkblQkJC5To6Ot08PDzIR0dHoaenp2f4+Pgo09PTBODg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6enoATk5OAF5e
        XgRVVVUUUFBQJk1NTS9OTk4vVVVVJl9fXxSBgYEEMjIyAPf39wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/+AAA//AAAH/gAAA/wAAAH4AAAA8AAAAPAAAABgAAAAYAA
        AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAHAAAADwAAAB+AA
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///wD/8=
</value>
  </data>
</root>